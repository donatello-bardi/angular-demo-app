{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/sidebar.component/index.ts","webpack:///src/app/sidebar.component/sidebar.component.ts","webpack:///src/app/sidebar.component/sidebar.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","redirectTo","pathMatch","loadChildren","SimpleTextModule","ExampleMenuModule","PostsModule","AppRoutingModule","forRoot","imports","providers","AppComponent","router","localStorage","getItem","removeItem","navigate","$event","target","focus","selector","templateUrl","styleUrls","AppModule","register","enabled","production","declarations","bootstrap","SidebarComponent","environment","bootstrapModule","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n// Module dependencies.\nconst routes: Routes = [{\n    path: '',\n    redirectTo: '/menu',\n    pathMatch: 'full',\n}, {\n    path: 'text',\n    loadChildren: () => import('./example-simple-text.module').then(({ SimpleTextModule }) => SimpleTextModule)\n}, {\n    path: 'menu',\n    loadChildren: () => import('./example-menu.module').then(({ ExampleMenuModule }) => ExampleMenuModule)\n}, {\n    path: 'posts',\n    loadChildren: () => import('./example-posts.module').then(({ PostsModule }) => PostsModule)\n}];\n\n@NgModule({\n    imports: [\n        RouterModule.forRoot(routes)\n    ],\n    exports: [\n        RouterModule\n    ],\n    providers: [\n    ]\n})\nexport class AppRoutingModule {}\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n    constructor(private router: Router) {\n        const path = localStorage.getItem('path');\n\n        if (path) {\n            localStorage.removeItem('path');\n            this.router.navigate([path]);\n        }\n    }\n}\n","<button type='button' class='hamburger'\n    (click)='$event.target.focus()'\n>\n    <i></i>\n</button>\n<header>\n    <h1>Angular Demo App</h1>\n</header>\n<app-sidebar></app-sidebar>\n<main>\n    <router-outlet></router-outlet>\n</main>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\n\n// Base dependencies.\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ServiceWorkerModule } from '@angular/service-worker';\nimport { environment } from '../environments/environment';\n\n// App dependencies.\nimport { SidebarComponent } from './sidebar.component';\n\n@NgModule({\n    imports: [\n        BrowserModule,\n        AppRoutingModule,\n        HttpClientModule,\n        ServiceWorkerModule.register('ngsw-worker.js', { enabled: environment.production })\n    ],\n\n    declarations: [\n        AppComponent,\n        SidebarComponent\n    ],\n\n    providers: [],\n    bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","export * from './sidebar.component';\r\n","// Angular dependencies.\r\nimport { Component, HostListener } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'app-sidebar',\r\n    templateUrl: './sidebar.component.html',\r\n    styleUrls: ['./sidebar.component.scss']\r\n})\r\nexport class SidebarComponent {\r\n    @HostListener('click', ['$event'])\r\n    onClick($event) {\r\n        $event.target.focus();\r\n    }\r\n\r\n    constructor(\r\n    ) {\r\n    }\r\n}\r\n","<ul role='navigation'>\r\n    <li>\r\n        <a routerLink='/posts' routerLinkActive='--active'>Posts</a>\r\n    </li>\r\n    <li>\r\n        <a routerLink='/menu' routerLinkActive='--active'>Menu</a>\r\n    </li>\r\n    <li>\r\n        <a routerLink='/text' routerLinkActive='--active'>Text</a>\r\n    </li>\r\n</ul>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}